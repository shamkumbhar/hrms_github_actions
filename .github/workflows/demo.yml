name: HRMS CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

env:
  BACKEND_IMAGE: shamkumbhar47/backend:githubaction3
  FRONTEND_IMAGE: shamkumbhar47/frontend:githubaction3

jobs:

  # ======================================
  # 1️⃣ Backend Build Job
  # ======================================
  build-backend:
    runs-on: [self-hosted, Linux, X64]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Build Backend with Maven
        working-directory: Backend_hrms
        run: mvn clean package -DskipTests

      - name: Build Backend Docker Image
        working-directory: Backend_hrms
        run: docker build -t ${{ env.BACKEND_IMAGE }} .

      - name: Save Backend Docker Image as Artifact
        run: docker save ${{ env.BACKEND_IMAGE }} -o backend.tar

      - name: Upload Backend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-image
          path: backend.tar

  # ======================================
  # 2️⃣ Frontend Build Job
  # ======================================
  build-frontend:
    runs-on: [self-hosted, Linux, X64]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Build Frontend (Angular)
        working-directory: frontend
        run: |
          rm -rf node_modules package-lock.json
          npm install
          npx ng build --configuration production --no-prerender

      - name: Build Frontend Docker Image
        working-directory: frontend
        run: docker build -t ${{ env.FRONTEND_IMAGE }} .

      - name: Save Frontend Docker Image as Artifact
        run: docker save ${{ env.FRONTEND_IMAGE }} -o frontend.tar

      - name: Upload Frontend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-image
          path: frontend.tar

  # ======================================
  # 3️⃣ Push Docker Images Job
  # ======================================
  push-images:
    runs-on: [self-hosted, Linux, X64]
    needs: [build-backend, build-frontend]   # wait for both builds

    steps:
      - name: Download Backend Artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-image
          path: .

      - name: Download Frontend Artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-image
          path: .

      - name: Load Docker Images
        run: |
          docker load -i backend.tar
          docker load -i frontend.tar

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Images to Docker Hub
        run: |
          docker push ${{ env.BACKEND_IMAGE }}
          docker push ${{ env.FRONTEND_IMAGE }}

  # ======================================
  # 4️⃣ Deploy Job
  # ======================================
  deploy:
    runs-on: [self-hosted, Linux, X64]
    needs: [push-images]   # run only after images pushed

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Deploy using Docker Compose
        run: |
          docker-compose down --volumes --remove-orphans
          docker system prune -af --volumes
          docker-compose up -d
