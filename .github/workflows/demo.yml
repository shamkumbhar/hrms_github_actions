name: HRMS CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    # ðŸ‘‡ Run this job on your EC2 self-hosted runner
    runs-on: [self-hosted, Linux, X64]


    env:
      BACKEND_IMAGE: shamkumbhar47/backend:githubaction2
      FRONTEND_IMAGE: tejas2506/frontend:githubaction2
        
    steps:
      # ===============================
      # Checkout Repository
      # ===============================
      - name: Checkout repository
        uses: actions/checkout@v4

      # ===============================
      # Backend Build (Maven)
      # ===============================
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Build Backend with Maven
        working-directory: Backend_hrms
        run: mvn clean package -DskipTests

      # ===============================
      # Build Backend Docker Image
      # ===============================
      - name: Build Backend Docker Image
        working-directory: Backend_hrms
        run: docker build -t $BACKEND_IMAGE .



        # ===============================
      # Setup Node for Frontend
      # ===============================
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # ===============================
      # Build Frontend (Angular)
      # ===============================
      - name: Build Frontend with Angular
        working-directory: frontend
        run: |
          rm -rf node_modules package-lock.json
          npm install
          npx ng build --configuration production --no-prerender

      - name: Build Frontend Docker Image
        working-directory: Frontend
        run: docker build -t $FRONTEND_IMAGE .

      # =============================== 
      # Push Docker Images
      # ===============================
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker Images
        run: |
          docker push $BACKEND_IMAGE
          docker push $FRONTEND_IMAGE


    
      # ===============================
      # Deploy with Docker Compose
      # ===============================
      - name: Deploy using Docker Compose
        run: |
          docker-compose down --volumes --remove-orphans || true
          docker system prune -af --volumes
          docker-compose up -d
